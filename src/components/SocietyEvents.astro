---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

interface Props {
  society:
    | 'cms'
    | 'pas'
    | 'ps'
    | 'sports'
    | 'egaming'
    | 'ems'
    | 'blood-donation';
  gradientColors: {
    from: string;
    to: string;
  };
  accentColor: string;
}

const { society, gradientColors, accentColor } = Astro.props;

// Fetch events related to this society
const allEvents = await getCollection('events');
const societyEvents = allEvents.filter(
  (event: CollectionEntry<'events'>) => event.data.society === society
);

// Get upcoming events only
const upcomingEvents = societyEvents
  .filter((event: CollectionEntry<'events'>) => event.data.date >= new Date())
  .sort(
    (a: CollectionEntry<'events'>, b: CollectionEntry<'events'>) =>
      a.data.date.getTime() - b.data.date.getTime()
  );

// Get recent past events (for showcase purposes)
const pastEvents = societyEvents
  .filter((event: CollectionEntry<'events'>) => event.data.date < new Date())
  .sort(
    (a: CollectionEntry<'events'>, b: CollectionEntry<'events'>) =>
      b.data.date.getTime() - a.data.date.getTime()
  )
  .slice(0, 3);
---

<!-- Upcoming Events Section -->{
  upcomingEvents.length > 0 && (
    <section class="py-20">
      <div class="container mx-auto px-6">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold mb-6">
            <span
              class={`bg-gradient-to-r ${gradientColors.from} ${gradientColors.to} bg-clip-text text-transparent`}
            >
              Upcoming Events
            </span>
          </h2>
          <p class="text-gray-300 max-w-2xl mx-auto">
            Join us for exciting events and workshops
          </p>
        </div>

        <div class="max-w-4xl mx-auto space-y-6">
          {upcomingEvents.map((event: CollectionEntry<'events'>) => (
            <div
              class={`bg-gradient-to-br from-gray-800/60 to-gray-900/60 backdrop-blur-sm border border-gray-700 rounded-2xl p-6 hover:border-${accentColor}-500/50 transition-all duration-300`}
            >
              <div class="flex flex-col md:flex-row md:items-center md:justify-between">
                <div class="flex-1 mb-4 md:mb-0">
                  <div class="flex items-center space-x-4 mb-3">
                    <div
                      class={`bg-${accentColor}-500/20 text-${accentColor}-300 px-3 py-1 rounded-lg font-medium`}
                    >
                      {event.data.date.toLocaleDateString('en-US', {
                        month: 'short',
                        day: 'numeric',
                      })}
                    </div>
                    <span class={`text-${accentColor}-400 font-medium`}>
                      {event.data.type.charAt(0).toUpperCase() +
                        event.data.type.slice(1)}
                    </span>
                  </div>
                  <h3 class="text-2xl font-bold text-white mb-2">
                    {event.data.title}
                  </h3>
                  <p class="text-gray-300 mb-3">{event.data.description}</p>
                  <div class="flex items-center space-x-4 text-sm text-gray-400">
                    <div class="flex items-center">
                      <svg
                        class="w-4 h-4 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                        />
                      </svg>
                      {event.data.time}
                      {event.data.endTime ? ` - ${event.data.endTime}` : ''}
                    </div>
                    <div class="flex items-center">
                      <svg
                        class="w-4 h-4 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                        />
                      </svg>
                      {event.data.location}
                    </div>
                  </div>
                </div>
                <div class="flex space-x-3">
                  {event.data.registrationRequired &&
                    event.data.registrationLink && (
                      <a
                        href={event.data.registrationLink}
                        class={`bg-gradient-to-r ${gradientColors.from} ${gradientColors.to} px-6 py-2 rounded-lg transition-all duration-300 hover:scale-105`}
                      >
                        Register
                      </a>
                    )}
                  <a
                    href={`/events/${event.id}`}
                    class={`border border-gray-600 hover:border-${accentColor}-400 px-6 py-2 rounded-lg transition-all duration-300`}
                  >
                    Learn More
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>

        <div class="text-center mt-12">
          <a
            href="/news"
            class={`bg-gradient-to-r ${gradientColors.from} ${gradientColors.to} px-8 py-4 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105`}
          >
            View All Events
          </a>
        </div>
      </div>
    </section>
  )
}

<!-- Past Events Showcase (if any) -->
{
  pastEvents.length > 0 && (
    <section class="py-20 bg-gradient-to-br from-gray-900 to-gray-950">
      <div class="container mx-auto px-6">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold mb-6">
            <span
              class={`bg-gradient-to-r ${gradientColors.from} ${gradientColors.to} bg-clip-text text-transparent`}
            >
              Recent Events
            </span>
          </h2>
          <p class="text-gray-300 max-w-2xl mx-auto">
            Check out our recent successful events and activities
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {pastEvents.map((event: CollectionEntry<'events'>) => (
            <div
              class={`bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm border border-gray-700 rounded-2xl p-6 hover:border-${accentColor}-500/50 transition-all duration-300`}
            >
              <div class="flex items-center space-x-3 mb-4">
                <span
                  class={`bg-${accentColor}-500/20 text-${accentColor}-300 px-3 py-1 rounded-full text-sm font-medium`}
                >
                  {event.data.type.charAt(0).toUpperCase() +
                    event.data.type.slice(1)}
                </span>
                <span class="text-gray-400 text-sm">
                  {event.data.date.toLocaleDateString('en-US', {
                    month: 'short',
                    day: 'numeric',
                    year: 'numeric',
                  })}
                </span>
              </div>

              <h4 class="text-xl font-bold text-white mb-3">
                {event.data.title}
              </h4>

              <p class="text-gray-300 text-sm leading-relaxed mb-4">
                {event.data.description}
              </p>

              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2">
                  <div
                    class={`w-6 h-6 bg-gradient-to-br ${gradientColors.from} ${gradientColors.to} rounded-full`}
                  />
                  <span class={`text-${accentColor}-300 text-sm font-medium`}>
                    Society Event
                  </span>
                </div>
                <a
                  href={`/events/${event.id}`}
                  class={`text-${accentColor}-400 hover:text-${accentColor}-300 transition-colors text-sm font-medium`}
                >
                  Read More â†’
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}
