---
// ScrollAnimator Island - Handles scroll-based animations and smooth scrolling
---

<script>
	class ScrollAnimator {
		constructor() {
			this.init();
		}

		init() {
			// Smooth scrolling for navigation links
			document.querySelectorAll('a[href^="#"]').forEach(anchor => {
				anchor.addEventListener('click', this.handleSmoothScroll);
			});

			// Intersection Observer for animations
			this.setupScrollAnimations();
		}

		handleSmoothScroll(e: Event) {
			e.preventDefault();
			const target = document.querySelector(
				(e.currentTarget as HTMLAnchorElement).getAttribute('href')!
			);
			if (target) {
				target.scrollIntoView({
					behavior: 'smooth',
					block: 'start'
				});
			}
		}

		setupScrollAnimations() {
			const observerOptions = {
				threshold: 0.1,
				rootMargin: '0px 0px -100px 0px'
			};

			const observer = new IntersectionObserver((entries) => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						const target = entry.target as HTMLElement;
						target.style.opacity = '1';
						target.style.transform = 'translateY(0)';
					}
				});
			}, observerOptions);

			// Observe all sections for scroll animations
			document.querySelectorAll('section').forEach(section => {
				const element = section as HTMLElement;
				element.style.opacity = '0';
				element.style.transform = 'translateY(30px)';
				element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
				observer.observe(section);
			});
		}
	}

	// Initialize when DOM is loaded
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', () => new ScrollAnimator());
	} else {
		new ScrollAnimator();
	}
</script>
