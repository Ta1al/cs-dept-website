---
import { getCollection, type CollectionEntry, render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import EventRegistration from '../../components/EventRegistration.astro';
import '../../styles/global.css';

export async function getStaticPaths() {
  const eventEntries = await getCollection('events');
  return eventEntries.map(entry => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'events'>;
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Check if event is upcoming
const isUpcoming = entry.data.date >= new Date();
---

<Layout title={entry.data.title}>
  <Header />
  <main class="pt-24">
    <!-- Hero Section -->
    <section class="py-20 relative overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950"></div>
      <div class="absolute inset-0 grid-pattern opacity-10"></div>
      
      <div class="container mx-auto px-6 relative z-10">
        <div class="max-w-4xl mx-auto">
          <!-- Event Meta -->
          <div class="flex items-center space-x-4 mb-6">
            <span class={`px-3 py-1 rounded-full text-sm font-medium ${
              entry.data.type === 'workshop' ? 'bg-blue-500/20 text-blue-300' :
              entry.data.type === 'conference' ? 'bg-purple-500/20 text-purple-300' :
              entry.data.type === 'hackathon' ? 'bg-green-500/20 text-green-300' :
              entry.data.type === 'seminar' ? 'bg-cyan-500/20 text-cyan-300' :
              'bg-gray-500/20 text-gray-300'
            }`}>
              {entry.data.type.charAt(0).toUpperCase() + entry.data.type.slice(1)}
            </span>
            <span class="text-gray-400">
              {entry.data.date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </span>
            {entry.data.organizer && (
              <span class="text-gray-400">â€¢ Organized by {entry.data.organizer}</span>
            )}
            {!isUpcoming && (
              <span class="bg-red-500/20 text-red-300 px-2 py-1 rounded text-sm">Past Event</span>
            )}
          </div>

          <!-- Event Title -->
          <h1 class="text-4xl md:text-5xl font-bold mb-6">
            <span class="bg-gradient-to-r from-cyan-400 to-blue-600 bg-clip-text text-transparent">
              {entry.data.title}
            </span>
          </h1>

          <!-- Event Description -->
          <p class="text-xl text-gray-300 leading-relaxed mb-8">
            {entry.data.description}
          </p>

          <!-- Event Details Grid -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-4">
              <div class="flex items-center space-x-3 mb-2">
                <svg class="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="text-white font-medium">Time</span>
              </div>
              <p class="text-gray-300">
                {entry.data.time}{entry.data.endTime ? ` - ${entry.data.endTime}` : ''}
              </p>
            </div>

            <div class="bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-4">
              <div class="flex items-center space-x-3 mb-2">
                <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                </svg>
                <span class="text-white font-medium">Location</span>
              </div>
              <p class="text-gray-300">{entry.data.location}</p>
            </div>

            {entry.data.capacity && (
              <div class="bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-4">
                <div class="flex items-center space-x-3 mb-2">
                  <svg class="w-5 h-5 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                  </svg>
                  <span class="text-white font-medium">Capacity</span>
                </div>
                <p class="text-gray-300">{entry.data.capacity} attendees</p>
              </div>
            )}
          </div>

          <!-- Registration CTA -->
          {isUpcoming && entry.data.registrationRequired && (
            <div class="text-center mb-8">
              {entry.data.registrationLink ? (
                <a 
                  href={entry.data.registrationLink}
                  class={`inline-flex items-center px-8 py-4 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105 ${
                    entry.data.type === 'workshop' ? 'bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700' :
                    entry.data.type === 'conference' ? 'bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700' :
                    entry.data.type === 'hackathon' ? 'bg-gradient-to-r from-green-500 to-blue-600 hover:from-green-600 hover:to-blue-700' :
                    entry.data.type === 'seminar' ? 'bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700' :
                    'bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700'
                  }`}
                >
                  <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                  Register Now
                </a>
              ) : (
                <p class="text-lg text-blue-400 bg-blue-400/10 border border-blue-400/20 rounded-xl p-4">
                  Registration is available below. Fill out the form to secure your spot!
                </p>
              )}
            </div>
          )}
        </div>
      </div>
    </section>

    <!-- Event Content -->
    <section class="py-16">
      <div class="container mx-auto px-6">
        <div class="max-w-4xl mx-auto">
          <div class="text-gray-300 leading-relaxed markdown-content">
            <Content />
          </div>
          
          <!-- Registration Form for events without registrationLink -->
          {isUpcoming && entry.data.registrationRequired && !entry.data.registrationLink && (
            <EventRegistration
              eventTitle={entry.data.title}
              eventType={entry.data.type}
              eventId={entry.id}
              submitUrl="https://example.com/register"
            />
          )}
        </div>
      </div>
    </section>

    <!-- Navigation -->
    <section class="py-16 bg-gradient-to-b from-gray-950 to-gray-900">
      <div class="container mx-auto px-6">
        <div class="max-w-4xl mx-auto text-center">
          <a href="/news" class="inline-flex items-center bg-gradient-to-r from-cyan-400 to-blue-600 hover:from-cyan-500 hover:to-blue-700 px-6 py-3 rounded-lg transition-all duration-300 transform hover:scale-105">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to News & Events
          </a>
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>


